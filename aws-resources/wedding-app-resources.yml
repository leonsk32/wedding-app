AWSTemplateFormatVersion: 2010-09-09
Description: wedding app common resources

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - production

Mappings:
  Env:
    production:
      BasicAuthLambdaFunctionArn: <replace me>
      BasicAuth: true
      DomainName: <replace me>
      DomainAcmCertificateArn: <replace me>
    common:
      ServiceName: wedding-app-resources
      HostedZoneId: <replace me>

Conditions:
  SetBasicAuth: !Equals [!FindInMap [Env, !Ref EnvironmentName, BasicAuth], true]

Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Ref: AWS::StackName
  CloudfrontLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Sub
        - ${ServiceNameFromMap}-${EnvironmentName}-log
        - ServiceNameFromMap: !FindInMap [Env, common, ServiceName]
  CloudFrontDistribution:
    DependsOn:
      - CloudFrontOriginAccessIdentity
      - CloudfrontLogBucket
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub wedding-app-${EnvironmentName}.s3-ap-northeast-1.amazonaws.com
            Id: wedding-app-frontend
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        Enabled: "true"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /
            ErrorCachingMinTTL: 0
          - ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: /
            ErrorCachingMinTTL: 0
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          TargetOriginId: wedding-app-frontend
          ForwardedValues:
            QueryString: "true"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            !If
            - SetBasicAuth
            - - EventType: "viewer-request"
                LambdaFunctionARN: !FindInMap [Env, !Ref EnvironmentName, BasicAuthLambdaFunctionArn]
            - !Ref "AWS::NoValue"
        Aliases:
          - !FindInMap [Env, !Ref EnvironmentName, DomainName]
        ViewerCertificate:
          AcmCertificateArn: !FindInMap [Env, !Ref EnvironmentName, DomainAcmCertificateArn]
          SslSupportMethod: sni-only
        Logging:
          IncludeCookies: "false"
          Bucket: !Sub ${CloudfrontLogBucket}.s3-ap-northeast-1.amazonaws.com
          Prefix:
            !Sub
            - ${ServiceNameFromMap}-${EnvironmentName}-cloudfront
            - ServiceNameFromMap: !FindInMap [Env, common, ServiceName]
  RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !Join ['', [!GetAtt CloudFrontDistribution.DomainName, '.']]
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !FindInMap [Env, common, HostedZoneId]
      Name: !Join ['', [!FindInMap [Env, !Ref EnvironmentName, DomainName], '.']]
      Type: A

Outputs:
  CloudFrontOriginAccessIdentity:
    Value: !Ref CloudFrontOriginAccessIdentity
    Export:
      Name:
        !Sub
        - ${ServiceNameFromMap}-${EnvironmentName}-cloudFront-origin-access-identity
        - ServiceNameFromMap: !FindInMap [Env, common, ServiceName]
